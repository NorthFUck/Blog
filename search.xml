<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript基础</title>
      <link href="/Blog/2022/06/22/javascript-ji-chu/"/>
      <url>/Blog/2022/06/22/javascript-ji-chu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础</title>
      <link href="/Blog/2022/06/22/css-ji-chu/"/>
      <url>/Blog/2022/06/22/css-ji-chu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础</title>
      <link href="/Blog/2022/06/22/html-ji-chu/"/>
      <url>/Blog/2022/06/22/html-ji-chu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Javaweb</title>
      <link href="/Blog/2022/06/22/javaweb/"/>
      <url>/Blog/2022/06/22/javaweb/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java8</title>
      <link href="/Blog/2022/06/22/java8/"/>
      <url>/Blog/2022/06/22/java8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础</title>
      <link href="/Blog/2022/06/22/linux-ji-chu/"/>
      <url>/Blog/2022/06/22/linux-ji-chu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JDBC</title>
      <link href="/Blog/2022/06/22/jdbc/"/>
      <url>/Blog/2022/06/22/jdbc/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql基础</title>
      <link href="/Blog/2022/06/22/mysql-ji-chu/"/>
      <url>/Blog/2022/06/22/mysql-ji-chu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java进阶</title>
      <link href="/Blog/2022/06/22/java-jin-jie/"/>
      <url>/Blog/2022/06/22/java-jin-jie/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaSE</title>
      <link href="/Blog/2022/06/22/javase/"/>
      <url>/Blog/2022/06/22/javase/</url>
      
        <content type="html"><![CDATA[<h2 id="Java的概述"><a href="#Java的概述" class="headerlink" title="Java的概述"></a>Java的概述</h2><ul><li>Java是sun公司1995年推出的。2009年被Oracle收购</li><li>Java之父——詹姆斯.高斯林</li><li>Java是一门高级编程语言：语言风格接近人类的自然语言，写程序简单易懂</li><li>Java的流行程度很高，商业占用率很高</li><li>重要特性：可移植性……</li></ul><h4 id="Java能干啥"><a href="#Java能干啥" class="headerlink" title="Java能干啥"></a>Java能干啥</h4><ul><li>什么都能干，但是最被市场认可的是企业级开发：京东，淘宝，这样的互联网系统</li></ul><h4 id="Java的技术体系"><a href="#Java的技术体系" class="headerlink" title="Java的技术体系"></a>Java的技术体系</h4><ul><li>JavaSE——标准版：Java技术的核心基础</li><li>JavaEE——企业版：大型互联网企业级解决方案——充分被市场认可</li><li>JavaME——小型版：移动应用的解决方案，没有被市场认可</li></ul><h4 id="Java的产品：JDK"><a href="#Java的产品：JDK" class="headerlink" title="Java的产品：JDK"></a>Java的产品：JDK</h4><ul><li>LTS：长期支持版：JDK 8 ， 11 ， 17</li><li>JDK中要用的2个最重要的程序<ul><li>Javac    编译程序</li><li>Java       执行程序</li></ul></li><li>JDK的组成<ul><li>JVM(Java virtual Machine)——Java虚拟机 ，真正运行Java程序的地方</li><li>核心类库——Java自己写好的程序，给程序员自己的程序调用的</li><li>JRE(Java Runtime Environment) ：Java的运行环境</li><li>JDK(Java Development Kit) ：Java开发工具包(包括上面所有)</li></ul></li></ul><h4 id="Java程序的执行原理"><a href="#Java程序的执行原理" class="headerlink" title="Java程序的执行原理"></a>Java程序的执行原理</h4><ul><li>Java程序最终会翻译，翻译乘计算机能识别的机器语言：000111……这样的形式驱动机器干活</li><li>BUG<ul><li><ol><li>代表程序出现问题或者漏洞的意思</li><li>DEBUG——解决问题的意思</li></ol></li></ul></li></ul><h2 id="Java基础语法"><a href="#Java基础语法" class="headerlink" title="Java基础语法"></a>Java基础语法</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><p>注释是什么？</p><ul><li>写在程序中对程序进行解释说明的文字</li></ul></li><li><p>注释种类</p><ul><li>```java<br>// 单行注释<br>/*<pre><code>单行注释</code></pre><em>/<br>/</em>*<pre><code>文档注释</code></pre>*/<pre class="line-numbers language-none"><code class="language-none">  - ```java  package com.google.note;    /**   * @Date 2022/5/15   * @Description 注释   */  public class NoteDemo {      public static void main(String[] args) {          // 输出语句——单行注释          System.out.println("你好");      }        /*  多行注释      *      * */        /**       *文档注释       * @param number_a       * @param number_b       * @return       */      public static int sum(int number_a , int number_b) {          return number_a + number_b;      }  }  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>注释特点</p><ul><li>不影响程序的运行，编译后的class文件中已经没有注释了</li></ul></li></ul><h3 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h3><ul><li><p>字面量:计算机是用来处理数据的，字面量就是告诉程序员：数据在程序中的书写格式</p><ul><li><p>```java<br>public class LiteralDemo {</p><pre><code>public static void main(String[] args) {    // 目标：掌握常见数据在程序中的书写格式    // 数字    System.out.println(666);    // 小数    System.out.println(66.6);    // 字符    System.out.println('a');    System.out.println(' ');    // 特殊字符 '\n':换行 , '\t':相当于tab键    System.out.println('\n');    System.out.println('\t');    // 字符串    System.out.println("凤兮凤兮归故乡");    // 布尔值    System.out.println(true);    System.out.println(false);}</code></pre><p>}</p><pre class="line-numbers language-none"><code class="language-none">### 变量- &lt;img src="E:\笔记\Java\img\变量.png"  /&gt;  - ```java     public class VariableDemo {        public static void main(String[] args) {            // 目标：掌握变量的使用方法            /*            变量的作用： 存储一个数据的，可以改变里面存的数据                变量的格式：数据类型 变量名称 = 初始值            */            double money = 66.0;            System.out.println(money);                money = money + 22.0;            System.out.println(money);        }    }    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>变量使用的注意方式</p><ul><li>```java<br>/*<pre><code>    * 1. 变量要先声明再使用    * 2. 什么类型变量存储什么类型的数据    * 3. 变量存在访问范围，同一个范围变量名不能重复    * 4. 变量定义时可以没有初始化值，但是在使用时必须有初始化值    * */</code></pre><pre class="line-numbers language-none"><code class="language-none">- ```java  public class VariableDemo2 {      public static void main(String[] args) {          // 目标：掌握变量的注意事项          /*          * 1. 变量要先声明再使用          * 2. 什么类型变量存储什么类型的数据          * 3. 变量存在访问范围，同一个范围变量名不能重复          * 4. 变量定义时可以没有初始化值，但是在使用时必须有初始化值          * */          // 1. 变量要先声明再使用          int number_a = 3;          System.out.println(number_a);            // 2. 什么类型变量存储什么类型的数据          double money = 88.8;          System.out.println(money);            // 3. 变量存在访问范围，同一个范围变量名不能重复          int number_b = 7;          System.out.println(number_b);            // 4. 变量定义时可以没有初始化值，但是在使用时必须有初始化值          int number_c = 100;          // Variable 'number_c' might not have been initialized          // 变量“number_c”可能尚未初始化          System.out.println(number_c);          }  }  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><ul><li>二进制 <ul><li><img src="E:\笔记\Java\img\二进制转换.png" style="zoom:80%;"></li><li>十进制转二进制<ul><li><img src="E:\笔记\Java\img\进制转换.png"></li></ul></li></ul></li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li>引用数据类型：String</li><li>基本数据类型：4大类8种<ul><li>byte short int(默认) long 整型</li><li>flot double(默认) 浮点型</li><li>char 字符型</li><li>boolean 布尔型</li></ul></li><li>随便写的整数，小数字面默认什么类型？<ul><li>23 ， 默认是 int 类型， 加上L/L就是long类型的数据</li><li>23.8 ， 默认是double类型 ， 加上F/f就是float类型了</li></ul></li></ul><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><ul><li>Java自己保留的，我们不能用来取名字</li></ul><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><ul><li>取名字的规则，数字，字母，下划线 ， 美元符号组成等</li><li>数字不能开头，不能是关键字</li></ul><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><ul><li><p><strong>整型、实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算。</strong></p><p>转换从低级到高级。</p></li><li><p>自动类型转换 是？</p><ul><li>类型范围小的变量，可以直接赋值给类型范围大的变量</li></ul></li><li><p>进行类型转换的原因</p><ul><li>存在不同类型的变量赋值给其他类型的变量</li></ul></li><li><p>自动类型转换是什么样的？</p><ul><li>类型范围小的变量，可以直接赋值给类型范围大的变量</li></ul></li><li><p>数据类型转换必须满足如下规则：</p><ul><li>\1. 不能对boolean类型进行类型转换。</li><li>\2. 不能把对象类型转换成不相关类的对象。</li><li>\3. 在把容量大的类型转换为容量小的类型时必须使用强制类型转换。</li><li>\4. 转换过程中可能导致溢出或损失精度，</li></ul></li><li><p>```java<br>/*</p><pre><code>低  ------------------------------------&gt;  高byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double </code></pre><p>*/</p><pre class="line-numbers language-none"><code class="language-none">- ```java   public class TypeDemo {      public static void main(String[] args) {          // 目标：理解自动类型转换          byte number_a = 10;          int number_b = number_a;          // 自动类型转换          System.out.println(number_a);          System.out.println(number_b);                  }  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li>菜鸟教程</li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
